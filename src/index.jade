<!DOCTYPE html>
html(lang="")
head

	//- NECESIDADES BASICAS DE LA PAGINA
	meta(charset="UTF-8")
	meta(http-equiv="X-UA-Compatible" content="IE=edge")

	meta(name="description" content="")
	meta(name="author" content="")

	title prueba1

	//- MOBILE METAS
	meta(name="viewport" content="width=device-width, initial-scale=1")

	//- WEB APP MANIFEST
	link(rel="manifest" href="manifest.json")

	//- SEO: Si la url de la version mobile es diferente de la version desktop,
		añadir una URL canonica a la pagina de la version desktop.
		https://developers.google.com/webmasters/smartphone-sites/feature-phones

		ej: link rel="canonical" href="http://www.ejemplo.com/"
	
	//- El Care-Package utiliza un modulo de gulp para anidar todo el código
		CSS dentro del archivo .html de producción, para usar hojas de estilo
		extras importarlas en el archivo `main.styl` por medio de `@import`. Si
		deseas hacerlo de la forma convencional coloca la etiqueta `link`
		dentro del bloque de smoosher.

	//- CSS
	// smoosh
	link(rel="stylesheet" href="./css/main.css")
	// endsmoosh

	//- FAVICON
	link(rel="icon" type="image/png" href="")

body
	//- Agrega el contenido de tu aplicacion web aqui:
	header.main-header
		h1.title Web-Care-Package
	.layout
		.subheading
			h2.title--secondary paquete de inicio con todas las herramientas necesarias para el desarrollo front-end.
			p.description Empieza tu proyecto web con Web-Care-Package y manten tu flujo de trabajo optimo, productivo, profesional y colaborativo.
		
	//- Google Analytics: cambiar UA-XXXXX-X por el ID de tu sitio web
	script.
		(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
		(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
		m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
		})(window,document,'script','//www.google-analytics.com/analytics.js','ga');
		ga('create', 'UA-XXXXX-X', 'auto');
		ga('send', 'pageview');
	
	//- El Care-package anida tambien todo el código JS dentro del archivo
		.html de producción, si deseas usar archivos JS extras puedes intentar
		requerirlos dentro del archivo `main.js` gracias a browserify. Si quieres hacerlo de la forma convencional, coloca la etiqueta `script`
		dentro del bloque de smoosher.
	
	//- JS
	// smoosh 
	script(src="./js/main.js")
	// endsmoosh 